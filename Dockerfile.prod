## Para usar este, correr `docker-compose -f docker-compose-prod.yml up`

FROM python:3.12-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    apache2 \
    apache2-dev \
    build-essential \
    python3-dev \
    libapache2-mod-wsgi-py3 \
    && rm -rf /var/lib/apt/lists/*

# Create app user and group
RUN groupadd -r app && useradd -r -g app app

# Create necessary directories
RUN mkdir -p /code/media/fotos /code/media/profile_pics /code/staticfiles

WORKDIR /code

# Copy requirements first to leverage Docker cache
COPY requirements.txt /code/
RUN pip install -r requirements.txt

# Copy project files
COPY . /code/

# Set permissions
RUN chown -R app:app /code \
    && chmod -R 755 /code \
    && chown -R app:app /var/www \
    && chmod -R 755 /var/www \
    # Ensure media directories are writable
    && chmod -R 777 /code/media \
    && chmod -R 777 /code/staticfiles \
    # Create directory for config.json with proper permissions
    && mkdir -p /code/config \
    && chown -R app:app /code/config \
    && chmod -R 777 /code/config

# Copy and set up Apache configuration
COPY apache-config.conf /etc/apache2/sites-available/000-default.conf
RUN a2enmod wsgi

# Switch to app user
USER app

# Update config.py to use the new config directory
ENV CONFIG_DIR=/code/config

EXPOSE 80

# Start Apache
CMD ["/usr/sbin/apache2ctl", "-D", "FOREGROUND"]