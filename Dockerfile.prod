## Para usar este, correr `docker-compose -f docker-compose-prod.yml up`

FROM python:3.12

# Install Apache and Pillow dependencies
RUN apt-get update && apt-get install -y \
    apache2 \
    apache2-dev \
    && a2enmod ssl \
    && a2enmod rewrite

# Install mod_wsgi via pip
RUN pip install mod_wsgi

# Configure mod_wsgi
RUN mod_wsgi-express install-module
RUN echo "LoadModule wsgi_module $(find /usr/lib/apache2/modules/ -name 'mod_wsgi*.so')" > /etc/apache2/mods-available/wsgi.load
RUN a2enmod wsgi

# Copy SSL certificates
COPY ./certs/certificate.cer /etc/ssl/certs/
COPY ./certs/fullchain.cer /etc/ssl/certs/
COPY ./certs/private.key /etc/ssl/private/

# Copy Apache configuration
COPY ./apache-config.conf /etc/apache2/sites-available/000-default.conf

# Enable the site
RUN a2ensite 000-default

ENV PYTHONBUFFERED=1

WORKDIR /code

COPY requirements.txt .

RUN pip install -r requirements.txt
RUN apt-get update && apt-get install -y sqlite3 dos2unix

COPY . .

COPY entrypoint.sh /code/
RUN chmod +x /code/entrypoint.sh
RUN dos2unix /code/entrypoint.sh && apt-get --purge remove -y dos2unix && rm -rf /var/lib/apt/lists/*
RUN chmod +x /code/entrypoint.sh
RUN a2enmod rewrite

# Install requirements
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

EXPOSE 80 443

ENTRYPOINT ["/code/entrypoint.sh"]
CMD ["apache2ctl", "-D", "FOREGROUND"]