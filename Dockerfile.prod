## Para usar este, correr `docker-compose -f docker-compose-prod.yml up`

FROM python:3.12

# Install Apache and dependencies
RUN apt-get update && apt-get install -y \
    apache2 \
    apache2-dev \
    libjpeg-dev \
    zlib1g-dev \
    libpng-dev \
    python3-pil \
    python3-pil.imagetk \
    && a2enmod ssl \
    && a2enmod rewrite

# Install mod_wsgi via pip
RUN pip install mod_wsgi

# Configure mod_wsgi
RUN mod_wsgi-express install-module
RUN echo "LoadModule wsgi_module $(find / -name 'mod_wsgi*.so' 2>/dev/null | head -n 1)" > /etc/apache2/mods-available/wsgi.load

# Set Apache environment variables
ENV APACHE_LOG_DIR=/var/log/apache2

WORKDIR /code

# Copy project files
COPY . .

# Install Python dependencies
RUN pip install -r requirements.txt

# Create and set permissions for Apache directories
RUN mkdir -p /var/run/apache2 /var/lock/apache2 /var/log/apache2 && \
    chown -R www-data:www-data /var/run/apache2 /var/lock/apache2 /var/log/apache2 && \
    chmod -R 755 /var/run/apache2 /var/lock/apache2 /var/log/apache2

RUN a2enmod lbmethod_byrequests

# Create media, static, and data directories with correct permissions
RUN mkdir -p /code/media/fotos /code/media/profile_pics /code/staticfiles /code/data /code/config && \
    touch /code/data/db.sqlite3 && \
    touch /code/config/config.json && \
    chown -R www-data:www-data /code && \
    chmod -R 775 /code && \
    chmod 664 /code/data/db.sqlite3 /code/config/config.json

# Copy Apache configurations
COPY apache2.conf /etc/apache2/apache2.conf
COPY apache-config.conf /etc/apache2/sites-available/000-default.conf
RUN ln -sf /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-enabled/000-default.conf

# Make sure mod_wsgi is properly configured
RUN mod_wsgi-express module-config > /etc/apache2/mods-available/wsgi.load && \
    a2enmod wsgi

# Make entrypoint script executable
RUN chmod +x /code/entrypoint.sh

# Switch to www-data user
USER www-data

# Expose port
EXPOSE 80

# Start Apache
CMD ["./entrypoint.sh"]